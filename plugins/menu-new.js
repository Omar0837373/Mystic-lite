let handler = async (m, { conn, args, usedPrefix, command }) => {
    conn.sendPresenceUpdate('recording', m.chat);
    conn.relayMessage(m.chat, {
      viewOnceMessage: {
        message: {
          interactiveMessage: {
            header: {
              title: 'Ø§Ù„Ø§Ø²Ø±Ø§Ø±'
            },
            body: {
              text: 'ØªØ³Øª'
            },
            nativeFlowMessage: {
              buttons: [
                {
                  name: 'single_select',
                  buttonParamsJson: JSON.stringify({
                    title: 'Ø§Ù„Ø£ÙˆØ§Ù…Ø±',
                    sections: [
                      {
                        title: 'Ø§Ù„Ø£ÙˆØ§Ù…Ø±',
                        highlight_label: 'Ù…Ù…ÙŠØ²',
                        rows: [
                          {
                            header: 'Ø¬Ù…ÙŠØ¹ Ø§Ù„Ø£ÙˆØ§Ù…Ø±',
                            title: '(#Ø¬Ù€Ù€Ù€Ù€Ù…ÙŠØ¹ Ø§Ù„Ø£ÙˆØ§Ù…Ø±ðŸ”°)',
                            description: '',
                            id: '.menu'
                          },
                                        {
                            header: 'ÙˆÙ‚Øª Ø§Ù„ØªØ´ØºÙŠÙ„',
                            title: '(#ÙˆÙ‚Øª Ø§Ù„ØªØ´ØºÙŠÙ„ðŸ•“)',
                            description: '',
                            id: '.runtime'
                          },
                          {
                            header: 'Ø§Ù„Ù…Ø·ÙˆØ±',
                            title: 'Ø§Ù„Ù…Ø·ÙˆØ±',
                            description: '',
                            id: '.Ù…Ø·ÙˆØ±'
                          }
                        ]
                      }
                    ]
                  }),
                  messageParamsJson: ''
                }
              ]
            }
          }
        }
      }
    }, {})

}

handler.help = ['info']
handler.tags = ['main']
handler.command = ['Ø§Ù„Ù‚Ø§Ø¦Ù…Ø©']

export default handler
